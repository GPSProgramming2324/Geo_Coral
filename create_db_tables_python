import psycopg2
from psycopg2 import sql

# Replace these variables with your PostgreSQL credentials
host = "your_host"
user = "postgres"
password = "postgres"
database = "Geo_Coral_2"

# Table names
table1_name = "Coral"
table2_name = "Countries"
table3_name = "Coral_Countries"

# Connect to PostgreSQL server
try:
    connection = psycopg2.connect(
        host=host,
        user=user,
        password=password,
        database="postgres"  # Connect to the default "postgres" database for initial setup
    )

    # Create a cursor object
    cursor = connection.cursor()

    # Create a new database
    create_db_query = sql.SQL("CREATE DATABASE {}").format(sql.Identifier(database))
    cursor.execute(create_db_query)

    print(f"Database '{database}' created successfully.")

    # Switch to the newly created database
    connection.close()
    connection = psycopg2.connect(
        host=host,
        user=user,
        password=password,
        database=database
    )
    cursor = connection.cursor()

    # Create tables
    create_table1_query = sql.SQL("""
        CREATE TABLE {} (
            id SERIAL PRIMARY KEY,
            
            
        )
    """).format(sql.Identifier(table1_name))

    create_table2_query = sql.SQL("""
        CREATE TABLE {} (
            id SERIAL PRIMARY KEY,
            
            
        )
    """).format(sql.Identifier(table2_name))

    create_table3_query = sql.SQL("""
        CREATE TABLE {} (
            id SERIAL PRIMARY KEY,
            
        )
    """).format(sql.Identifier(table3_name))

    cursor.execute(create_table1_query)
    cursor.execute(create_table2_query)
    cursor.execute(create_table3_query)

    print(f"Tables '{table1_name}', '{table2_name}', and '{table3_name}' created successfully.")

except Exception as e:
    print(f"Error: {e}")

finally:
    # Close the cursor and connection
    if cursor:
        cursor.close()
    if connection:
        connection.close()
