import psycopg2
from psycopg2 import sql

# Replace these parameters with your actual database connection details
database_params = {
    'dbname': 'your_database',
    'user': 'your_username',
    'password': 'your_password',
    'host': 'localhost',
    'port': '5432',  # Replace with your PostgreSQL port if different
}

# Function to establish a database connection
def create_connection():
    try:
        connection = psycopg2.connect(**database_params)
        print("Connection to the database successful")
        return connection
    except psycopg2.Error as e:
        print(f"Error: Unable to connect to the database\n{e}")
        return None

# Function to execute a SQL query
def execute_query(connection, query):
    try:
        with connection.cursor() as cursor:
            cursor.execute(query)
            connection.commit()
            print("Query executed successfully")
    except psycopg2.Error as e:
        print(f"Error: Unable to execute the query\n{e}")

# Example: Connect to the database and create tables
connection = create_connection()

if connection:
    # Define the Coral table
    create_coral_table_query = sql.SQL("""
        CREATE TABLE Coral (
            CORAL_ID SERIAL PRIMARY KEY,
            NAME VARCHAR(255),
            COUNTRY VARCHAR(255),
            GEOMETRY POLYGON
        )
    """)
    execute_query(connection, create_coral_table_query)

    # Define the Countries table
    create_countries_table_query = sql.SQL("""
        CREATE TABLE Countries (
            COUNTRY_ID SERIAL PRIMARY KEY,
            NAME VARCHAR(255),
            AREA FLOAT,
            GEOMETRY POLYGON
        )
    """)
    execute_query(connection, create_countries_table_query)

    # Define the Corals_Countries table
    create_corals_countries_table_query = sql.SQL("""
        CREATE TABLE Corals_Countries (
            ID_serial SERIAL PRIMARY KEY,
            CORAL_ID INTEGER REFERENCES Coral(CORAL_ID),
            COUNTRY_ID INTEGER REFERENCES Countries(COUNTRY_ID)
        )
    """)
    execute_query(connection, create_corals_countries_table_query)

    # Close the connection when done
    connection.close()
    print("Connection closed")
